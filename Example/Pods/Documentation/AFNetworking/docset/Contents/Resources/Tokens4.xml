<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AFJSONRequestOperation.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AFJSONRequestOperation</TokenIdentifier>
			<Abstract type="html">AFJSONRequestOperation is a subclass of AFHTTPRequestOperation for downloading and working with JSON response data.</Abstract>
			<DeclaredIn>AFJSONRequestOperation.h</DeclaredIn>
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFJSONRequestOperation/setResponseJSON:</TokenIdentifier>
			<Abstract type="html">A JSON object constructed from the response data. If an error occurs while parsing, nil will be returned, and the error property will be set to the error.</Abstract>
			<DeclaredIn>AFJSONRequestOperation.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) id responseJSON</Declaration>
			
			
			<Anchor>//api/name/responseJSON</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFJSONRequestOperation/responseJSON</TokenIdentifier>
			<Abstract type="html">A JSON object constructed from the response data. If an error occurs while parsing, nil will be returned, and the error property will be set to the error.</Abstract>
			<DeclaredIn>AFJSONRequestOperation.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) id responseJSON</Declaration>
			
			
			<Anchor>//api/name/responseJSON</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFJSONRequestOperation/setJSONReadingOptions:</TokenIdentifier>
			<Abstract type="html">Options for reading the response JSON data and creating the Foundation objects. For possible values, see the NSJSONSerialization documentation section &quot;NSJSONReadingOptions&quot;.</Abstract>
			<DeclaredIn>AFJSONRequestOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSJSONReadingOptions JSONReadingOptions</Declaration>
			
			
			<Anchor>//api/name/JSONReadingOptions</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFJSONRequestOperation/JSONReadingOptions</TokenIdentifier>
			<Abstract type="html">Options for reading the response JSON data and creating the Foundation objects. For possible values, see the NSJSONSerialization documentation section &quot;NSJSONReadingOptions&quot;.</Abstract>
			<DeclaredIn>AFJSONRequestOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSJSONReadingOptions JSONReadingOptions</Declaration>
			
			
			<Anchor>//api/name/JSONReadingOptions</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFJSONRequestOperation/JSONRequestOperationWithRequest:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates and returns an AFJSONRequestOperation object and sets the specified success and failure callbacks.</Abstract>
			<DeclaredIn>AFJSONRequestOperation.h</DeclaredIn>			
			
			<Declaration>+ (instancetype)JSONRequestOperationWithRequest:(NSURLRequest *)urlRequest success:(void ( ^ ) ( NSURLRequest *request , NSHTTPURLResponse *response , id JSON ))success failure:(void ( ^ ) ( NSURLRequest *request , NSHTTPURLResponse *response , NSError *error , id JSON ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>urlRequest</Name>
					<Abstract type="html">The request object to be loaded asynchronously during execution of the operation</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the operation finishes successfully. This block has no return value and takes three arguments: the request sent from the client, the response received from the server, and the JSON object created from the response data of request.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the response data as JSON. This block has no return value and takes three arguments: the request sent from the client, the response received from the server, and the error describing the network or parsing error that occurred.
  </Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new JSON request operation</Abstract></ReturnValue>
			<Anchor>//api/name/JSONRequestOperationWithRequest:success:failure:</Anchor>
		</Token>
		
	</File>
</Tokens>